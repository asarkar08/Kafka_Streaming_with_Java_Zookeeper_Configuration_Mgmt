/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.pralay;
@SuppressWarnings("all")
public class SessionTestRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"SessionTestRecord\",\"namespace\":\"com.pralay\",\"fields\":[{\"name\":\"eventName\",\"type\":\"string\"},{\"name\":\"imsi\",\"type\":\"long\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"duration\",\"type\":\"long\",\"default\":0},{\"name\":\"result\",\"type\":\"string\",\"default\":\"N/A\"}]}");
  public CharSequence eventName;
  public long imsi;
  public long timestamp;
  public long duration;
  public CharSequence result;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return eventName;
    case 1: return imsi;
    case 2: return timestamp;
    case 3: return duration;
    case 4: return result;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: eventName = (CharSequence)value$; break;
    case 1: imsi = (Long)value$; break;
    case 2: timestamp = (Long)value$; break;
    case 3: duration = (Long)value$; break;
    case 4: result = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
